apiVersion: ray.io/v1
kind: RayService
metadata:
  name: vllm-service
spec:
  serveConfigV2: |
    applications:
      - name: VLLMService
        route_prefix: /
        import_path: ray-serve.vllm_engine:deployment_llm
        runtime_env:
          #working_dir: "https://github.com/infracloudio/ray-serve-demo/archive/28e409b87d2618cdb6f1a2f9f618b66ca896747e.zip"
          working_dir: "http://10.216.177.7/newray.zip"
          pip: [ "git+https://github.com/huggingface/transformers", "pydantic", "vllm", "fastapi", "requests"]
        args:
          model: microsoft/Phi-3-mini-4k-instruct
          trust_remote_code: true
          dtype: float16
  rayClusterConfig:
    rayVersion: '2.30.0-cpu' # Should match the Ray version in the image of the containers
    ######################headGroupSpecs#################################
    # Ray head pod template.
    headGroupSpec:
      # The `rayStartParams` are used to configure the `ray start` command.
      # See https://github.com/ray-project/kuberay/blob/master/docs/guidance/rayStartParams.md for the default settings of `rayStartParams` in KubeRay.
      # See https://docs.ray.io/en/latest/cluster/cli.html#ray-start for all available options in `rayStartParams`.
      rayStartParams:
        dashboard-host: '0.0.0.0'
      # Pod template
      template:
        spec:
          containers:
          - name: ray-head
            image: rayproject/ray:2.30.0-cpu
            ports:
            - containerPort: 6379
              name: gcs
            - containerPort: 8265
              name: dashboard
            - containerPort: 10001
              name: client
            - containerPort: 8000
              name: serve
            volumeMounts:
              - mountPath: /tmp/ray
                name: ray-logs
            resources:
              limits:
                cpu: "2"
                memory: "8G"
              requests:
                cpu: "2"
                memory: "8G"
            env:
            - name: RAY_GRAFANA_IFRAME_HOST
              value: http://127.0.0.1:3000
            - name: RAY_GRAFANA_HOST
              value: http://prometheus-grafana.prometheus-system.svc:80
            - name: RAY_PROMETHEUS_HOST
              value: http://prometheus-kube-prometheus-prometheus.prometheus-system.svc:9090
          volumes:
            - name: ray-logs
              emptyDir: {}
    workerGroupSpecs:
    # The pod replicas in this group typed worker
    - replicas: 1
      minReplicas: 1
      maxReplicas: 1
      groupName: cpu-group
      rayStartParams: {}
      # Pod template
      template:
        spec:
          containers:
          - name: ray-worker
            image: rayproject/ray:2.30.0-cpu
            resources:
              limits:
                cpu: 4
                memory: "16G"
                nvidia.com/gpu: 0
              requests:
                cpu: 3
                memory: "12G"
                nvidia.com/gpu: 0
          # Please add the following taints to the GPU node.
          #tolerations:
          #  - key: "nvidia.com/gpu"
          #    operator: "Equal"
          #    value: "present"
          #    effect: "NoSchedule"
